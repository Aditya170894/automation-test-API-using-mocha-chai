{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-08-18T10:24:27.750Z",
    "end": "2022-08-18T10:24:27.914Z",
    "duration": 164,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d3e43117-fd71-4acc-86ec-733d81dd7102",
      "title": "",
      "fullFile": "D:\\revisi-tugas-week3\\testcases\\update-data-profile.js",
      "file": "\\testcases\\update-data-profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4807b7e3-d82d-4b00-b9fa-d5dc47ff1fea",
          "title": "[@updatedata] Update Data User API Test",
          "fullFile": "D:\\revisi-tugas-week3\\testcases\\update-data-profile.js",
          "file": "\\testcases\\update-data-profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@positive] Change Data occupation and nationality will return status code 200",
              "fullTitle": "[@updatedata] Update Data User API Test [@positive] Change Data occupation and nationality will return status code 200",
              "timedOut": false,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(payload);\nlet bodyData = response.body;\nexpect(response.status).to.equal(200);\nexpect(bodyData.occupation).to.equal('Dev Ops');\nexpect(bodyData.nationality).to.equal('Jepang');\nexpect(bodyData).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "0a36d68f-0688-4910-9f2e-431841411f40",
              "parentUUID": "4807b7e3-d82d-4b00-b9fa-d5dc47ff1fea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@agezero] Change Data age with value 0 will return status code 400",
              "fullTitle": "[@updatedata] Update Data User API Test [@agezero] Change Data age with value 0 will return status code 400",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(ageZeroData);\nlet bodyData = response.body;\nexpect(bodyData.errorCode).to.equal(\"ER-03\");\nexpect(response.status).to.equal(400);\nexpect(bodyData.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\")",
              "err": {},
              "uuid": "ee02441b-5749-43c4-a6e7-9cb9d619605c",
              "parentUUID": "4807b7e3-d82d-4b00-b9fa-d5dc47ff1fea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@nohobby] Change Data hobbies with empty array will return status code 400",
              "fullTitle": "[@updatedata] Update Data User API Test [@nohobby] Change Data hobbies with empty array will return status code 400",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(noHobbiesData);\n        let bodyData = response.body;\n        expect(bodyData.errorCode).to.equal(\"ER-03\");\n        expect(response.status).to.equal(400);\n        expect(bodyData.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\")",
              "err": {},
              "uuid": "6e8a2b5f-3011-45cf-a8e8-ab0b140132b9",
              "parentUUID": "4807b7e3-d82d-4b00-b9fa-d5dc47ff1fea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@idnull] Change Type Data id with null will return status code 404",
              "fullTitle": "[@updatedata] Update Data User API Test [@idnull] Change Type Data id with null will return status code 404",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(idNullData);\n        let bodyData = response.body;\n    \n        expect(bodyData.errorCode).to.equal(\"ER-01\");\n        expect(response.status).to.equal(404);\n        expect(bodyData.message).to.equal(\"user not found\")",
              "err": {},
              "uuid": "1507f93b-e845-47d5-949e-19575cb22307",
              "parentUUID": "4807b7e3-d82d-4b00-b9fa-d5dc47ff1fea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a36d68f-0688-4910-9f2e-431841411f40",
            "ee02441b-5749-43c4-a6e7-9cb9d619605c",
            "6e8a2b5f-3011-45cf-a8e8-ab0b140132b9",
            "1507f93b-e845-47d5-949e-19575cb22307"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 125,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}