{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-09T13:33:57.710Z",
    "end": "2022-09-09T13:33:58.658Z",
    "duration": 948,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8c74562e-b5dd-4f41-bbcf-36c68deead69",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "47775dc6-a773-4e72-953a-b22cb53f66ad",
          "title": "Create User",
          "fullFile": "D:\\revisi-tugas-week3\\testcases\\search-user-by-id.js",
          "file": "\\testcases\\search-user-by-id.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@createUser] create new user",
              "fullTitle": "Create User [@createUser] create new user",
              "timedOut": false,
              "duration": 180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.postUser(requestBody);                \nexpect(response.status).to.equal(200); \nexpect(response.body).has.jsonSchema(createSchema);",
              "err": {},
              "uuid": "78672ebc-ccaf-405b-90e5-49ac44c269d2",
              "parentUUID": "47775dc6-a773-4e72-953a-b22cb53f66ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78672ebc-ccaf-405b-90e5-49ac44c269d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8435356-d83e-4480-8698-68a2086206df",
          "title": "[@userbyid] Search User by id Test",
          "fullFile": "D:\\revisi-tugas-week3\\testcases\\search-user-by-id.js",
          "file": "\\testcases\\search-user-by-id.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@validuserid] Search User by valid id will return status code 200",
              "fullTitle": "[@userbyid] Search User by id Test [@validuserid] Search User by valid id will return status code 200",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let userId = \"a5ef2157-3bad-4c92-bd50-8719befbdf77\";\nlet response = await api.getUserById(userId);\nlet bodyData = response.body;\nexpect(response.status).to.equal(200);\nexpect(bodyData.id).be.like(userId);\nexpect(response.body).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "f1bc5e23-d880-4375-ab4b-8dba74a00176",
              "parentUUID": "a8435356-d83e-4480-8698-68a2086206df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@invaliduserid] Search User by invalid id will return status code 404",
              "fullTitle": "[@userbyid] Search User by id Test [@invaliduserid] Search User by invalid id will return status code 404",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let userId = \"12345\";\nlet response = await api.getUserById(userId);\nlet bodyData = response.body;\nexpect(bodyData.errorCode).to.equal(\"ER-01\");\nexpect(response.status).to.equal(404);\nexpect(bodyData.message).to.equal(\"user not found\")",
              "err": {},
              "uuid": "0b52f877-d3a8-43f1-adc5-9c50e93ba2b9",
              "parentUUID": "a8435356-d83e-4480-8698-68a2086206df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1bc5e23-d880-4375-ab4b-8dba74a00176",
            "0b52f877-d3a8-43f1-adc5-9c50e93ba2b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1acfa90f-2e82-4864-8ff9-1fe412881136",
          "title": "[@updatedata] Update Data User API Test",
          "fullFile": "D:\\revisi-tugas-week3\\testcases\\update-data-profile.js",
          "file": "\\testcases\\update-data-profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@positive] Change Data occupation and nationality will return status code 200",
              "fullTitle": "[@updatedata] Update Data User API Test [@positive] Change Data occupation and nationality will return status code 200",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(payload);\nlet bodyData = response.body;\nexpect(response.status).to.equal(200);\nexpect(bodyData.occupation).to.equal('Dev Ops');\nexpect(bodyData.nationality).to.equal('Jepang');\nexpect(bodyData).has.jsonSchema(jsonSchema);",
              "err": {},
              "uuid": "a56f7c2c-850a-4878-9b14-dbdc311fa82c",
              "parentUUID": "1acfa90f-2e82-4864-8ff9-1fe412881136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@agezero] Change Data age with value 0 will return status code 400",
              "fullTitle": "[@updatedata] Update Data User API Test [@agezero] Change Data age with value 0 will return status code 400",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(zeroAge);\nlet bodyData = response.body;\nexpect(bodyData.errorCode).to.equal(\"ER-03\");\nexpect(response.status).to.equal(400);\nexpect(bodyData.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\")",
              "err": {},
              "uuid": "3afe1b92-f871-4fe7-9bcd-7c1758846e6a",
              "parentUUID": "1acfa90f-2e82-4864-8ff9-1fe412881136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@nohobby] Change Data hobbies with empty array will return status code 400",
              "fullTitle": "[@updatedata] Update Data User API Test [@nohobby] Change Data hobbies with empty array will return status code 400",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(noHobbies);\nlet bodyData = response.body;\nexpect(bodyData.errorCode).to.equal(\"ER-03\");\nexpect(response.status).to.equal(400);\nexpect(bodyData.message).to.equal(\"you must specify data for firstname, lastName, age, occupation, nationality, hobbies (at least 1), and gender\")",
              "err": {},
              "uuid": "4b341862-b757-48ec-bbf0-c88c63541b82",
              "parentUUID": "1acfa90f-2e82-4864-8ff9-1fe412881136",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[@idnull] Change Type Data id with null will return status code 404",
              "fullTitle": "[@updatedata] Update Data User API Test [@idnull] Change Type Data id with null will return status code 404",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = await api.putUser(nullId);\nlet bodyData = response.body;\n    \nexpect(bodyData.errorCode).to.equal(\"ER-01\");\nexpect(response.status).to.equal(404);\nexpect(bodyData.message).to.equal(\"user not found\")",
              "err": {},
              "uuid": "d73b3878-a1cd-42be-b622-5028414c3ed0",
              "parentUUID": "1acfa90f-2e82-4864-8ff9-1fe412881136",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a56f7c2c-850a-4878-9b14-dbdc311fa82c",
            "3afe1b92-f871-4fe7-9bcd-7c1758846e6a",
            "4b341862-b757-48ec-bbf0-c88c63541b82",
            "d73b3878-a1cd-42be-b622-5028414c3ed0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef2955e7-0d62-4eae-b1d3-6ecdde9587bf",
          "title": "Delete User",
          "fullFile": "D:\\revisi-tugas-week3\\testcases\\update-data-profile.js",
          "file": "\\testcases\\update-data-profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[@deleteUser] delete user",
              "fullTitle": "Delete User [@deleteUser] delete user",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let userId = \"3fa88cfd-963a-4734-96ed-d62134c6a70f\";\nlet response = await api.getUserById(userId);\nlet bodyData = response.body;\nexpect(response.status).to.equal(200);\nexpect(bodyData.id).be.like(userId);",
              "err": {},
              "uuid": "33d0fc4b-7d3e-43a3-a765-fa3ca06f831d",
              "parentUUID": "ef2955e7-0d62-4eae-b1d3-6ecdde9587bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33d0fc4b-7d3e-43a3-a765-fa3ca06f831d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}